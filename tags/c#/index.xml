<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>c# on wangyichen&#39;s blog</title>
    <link>https://yichenlove.github.io/tags/c#/</link>
    <description>Recent content in c# on wangyichen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>chen61813772@gmail.com (wangyichen)</managingEditor>
    <webMaster>chen61813772@gmail.com (wangyichen)</webMaster>
    <copyright>©2024, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 24 Mar 2023 14:23:15 +0800</lastBuildDate>
    
        <atom:link href="https://yichenlove.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>C# 之 抽象类简介</title>
        <link>https://yichenlove.github.io/posts/csharp-abstract/</link>
        <pubDate>Fri, 24 Mar 2023 14:23:15 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Fri, 24 Mar 2023 14:23:15 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/csharp-abstract/</guid>
        <description>抽象概念 抽象：笼统，模糊，看不懂，不明白 抽象类的特点： 1.如果一个类中只存在着只有方法声明但是没有方法体（没有实现）。那么这个方法就是抽象方</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>c#</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>C# List 底层源码剖析</title>
        <link>https://yichenlove.github.io/posts/csharp-list/</link>
        <pubDate>Tue, 21 Jun 2022 14:20:40 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Tue, 21 Jun 2022 14:20:40 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/csharp-list/</guid>
        <description>List 底层代码剖析 List是C#中最常见的可伸缩数组组件，我们常常用来替代数组使用，因为它是可伸缩的，所以我们在使用的时候可以不用手动去分配数组</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>C#</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>C# 接口Interface及其作用</title>
        <link>https://yichenlove.github.io/posts/csharp-interface/</link>
        <pubDate>Tue, 21 Jun 2022 11:49:26 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Tue, 21 Jun 2022 11:49:26 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/csharp-interface/</guid>
        <description>C# Interface接口定义了所有继承接口时应遵循的语法合同。 接口可以是命名空间或类的成员。接口声明可以包含一下成员的声明（没有任何实现的签</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>C#</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
