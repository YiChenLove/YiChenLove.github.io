<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>algorithms on wangyichen&#39;s blog</title>
    <link>https://yichenlove.github.io/tags/algorithms/</link>
    <description>Recent content in algorithms on wangyichen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>chen61813772@gmail.com (wangyichen)</managingEditor>
    <webMaster>chen61813772@gmail.com (wangyichen)</webMaster>
    <copyright>©2022, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 16 Dec 2021 16:39:31 +0800</lastBuildDate>
    
        <atom:link href="https://yichenlove.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>二项式分布算法（Java实现）</title>
        <link>https://yichenlove.github.io/posts/java-binomial-distribution/</link>
        <pubDate>Thu, 16 Dec 2021 16:39:31 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Thu, 16 Dec 2021 16:39:31 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/java-binomial-distribution/</guid>
        <description>二项式分布算法（Java实现） 最近开始看《算法(第四版)》，这是遇到的第一个算法题。题目要求的只是估计一下算法递归的次数，但我进一步研究了不</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>algorithms</category>
            
          
        
        
          
            
              <category>math</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>伯努利分布及计算公式(二项分布)</title>
        <link>https://yichenlove.github.io/posts/mathemticsbinomial/</link>
        <pubDate>Thu, 16 Dec 2021 15:55:15 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Thu, 16 Dec 2021 15:55:15 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/mathemticsbinomial/</guid>
        <description>伯努利分布（Bernoulli Distribution）是一种离散分布，在概率学中非常常用，有两种可能的结果： 1 表示成功，出现的概率为 p（其</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>algorithms</category>
            
          
        
        
          
            
              <category>math</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>欧几里得算法</title>
        <link>https://yichenlove.github.io/posts/euclidean-algorithm/</link>
        <pubDate>Tue, 30 Nov 2021 14:28:41 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Tue, 30 Nov 2021 14:28:41 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/euclidean-algorithm/</guid>
        <description>欧几里德算法是用来求两个正整数最大公约数的算法。古希腊数学家欧几里德在其著作《The Elements》中最早描述了这种算法,所以被命名为欧几</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>algorithms</category>
            
          
        
        
          
            
              <category>math</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>递归的静态方法计算ln(N!)的值</title>
        <link>https://yichenlove.github.io/posts/ln-factorial/</link>
        <pubDate>Mon, 29 Nov 2021 15:04:06 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Mon, 29 Nov 2021 15:04:06 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/ln-factorial/</guid>
        <description>编写一个递归的静态方法计算ln(N!)的值。 代码 alo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class Main { public static double f(int N){ //递归的题目还是要靠递归的方式解决 //递归</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>algorithms</category>
            
          
        
        
          
            
              <category>math</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>算法的时间与空间复杂度</title>
        <link>https://yichenlove.github.io/posts/algorithms-0/</link>
        <pubDate>Thu, 18 Nov 2021 17:23:40 +0800</pubDate>
        <author>chen61813772@gmail.com (wangyichen)</author>
        <atom:modified>Thu, 18 Nov 2021 17:23:40 +0800</atom:modified>
        <guid>https://yichenlove.github.io/posts/algorithms-0/</guid>
        <description>算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消</description>
        
        <dc:creator>wangyichen</dc:creator>
        
        
        
        
          
            
              <category>algorithms</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
