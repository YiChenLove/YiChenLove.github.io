<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on wangyichen&#39;s blog</title>
    <link>http://localhost:1313/en/tags/javascript/</link>
    <description>Recent content in Javascript on wangyichen&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 22 Nov 2021 20:48:05 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入理解 Typescript 高级用法</title>
      <link>http://localhost:1313/en/posts/typescripts-high/</link>
      <pubDate>Mon, 22 Nov 2021 20:48:05 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/typescripts-high/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;❝&lt;strong&gt;「前言」&lt;/strong&gt;：这里的标题看起来是 &amp;ldquo;高级用法&amp;rdquo;，不少同学可能就表示被劝退了。其实 &lt;code&gt;Typescript&lt;/code&gt; 作为一门 &lt;code&gt;强类型&lt;/code&gt; 编程语言，最具特色的就是他的类型表达能力，这是很多完备的后端语言都难以媲美的 &lt;del&gt;说的很对，但PHP是最好的语言&lt;/del&gt;，所以如果你搞懂了他的类型系统，对将来的日常开发一定是大有裨益的，但过于灵活的类型系统也注定了 &lt;code&gt;Typescript&lt;/code&gt; 无法成为一门纯粹的静态语言，不过每一行代码都有代码提示他不香嘛？ ❞&lt;/p&gt;</description>
    </item>
    <item>
      <title>说说 Javascript 数字精度丢失的问题，如何解决？</title>
      <link>http://localhost:1313/en/posts/javascripts-float/</link>
      <pubDate>Mon, 15 Nov 2021 20:02:11 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/javascripts-float/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/en/posts/javascripts-float/media/image1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;一场景复现-一场景复现&#34;&gt;&lt;a href=&#34;http://localhost:1313/en/posts/javascripts-float/#一、场景复现&#34;&gt;#&lt;/a&gt; 一、场景复现&lt;/h2&gt;&#xA;&lt;p&gt;一个经典的面试题&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;为什么是&lt;code&gt;false&lt;/code&gt;呢?&lt;/p&gt;&#xA;&lt;p&gt;先看下面这个比喻&lt;/p&gt;&#xA;&lt;p&gt;比如一个数 1÷3=0.33333333&amp;hellip;&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Javascript中apply、call、bind</title>
      <link>http://localhost:1313/en/posts/javascripts-bind/</link>
      <pubDate>Mon, 08 Nov 2021 11:03:43 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/javascripts-bind/</guid>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;applycall&#34;&gt;apply、call &lt;/h2&gt;&#xA;&lt;p&gt;在 javascript 中，call 和 apply 都是为了改变某个函数运行时的上下文（context）而存在的，换句话说，就是为了改变函数体内部 this 的指向。&lt;/p&gt;&#xA;&lt;p&gt;JavaScript 的一大特点是，函数存在「定义时上下文」和「运行时上下文」以及「上下文是可以改变的」这样的概念。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
