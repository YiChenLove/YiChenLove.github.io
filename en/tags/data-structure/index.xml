<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Structure on wangyichen&#39;s blog</title>
    <link>http://localhost:1313/en/tags/data-structure/</link>
    <description>Recent content in Data Structure on wangyichen&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 21 Jun 2022 18:14:43 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>链表—链式存储</title>
      <link>http://localhost:1313/en/posts/listnode/</link>
      <pubDate>Tue, 21 Jun 2022 18:14:43 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/listnode/</guid>
      <description>&lt;p&gt;在计算机科学中，链表作为一种基础的数据结构可以用来生成其它类型的数据结构。链表通常由一连串节点组成，每个节点包含任意的实例数据（data fields）和一或两个用来指向上一个/或下一个节点的位置的链接（&amp;ldquo;links&amp;rdquo;）。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的访问往往要在不同的排列顺序中转换。而链表是一种自我指示数据类型，因为它包含指向另一个相同类型的数据的指针（链接）。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型：单向链表，双向链表以及循环链表。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构中堆、栈和队列的理解Stak Heap Queue</title>
      <link>http://localhost:1313/en/posts/stak-heap-queue/</link>
      <pubDate>Tue, 21 Jun 2022 15:29:41 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/stak-heap-queue/</guid>
      <description>&lt;h3 id=&#34;一堆heap&#34;&gt;一、堆Heap&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;堆是一种经过排序的树形数据结构，每个节点都有一个值，通常我们所说的堆的数据结构是指二叉树。所以堆在数据结构中通常可以被看做是一棵树的数组对象。而且堆需要满足一下两个性质：&lt;br /&gt;&#xA;（1）堆中某个节点的值总是不大于或不小于其父节点的值；&lt;br /&gt;&#xA;（2）堆总是一棵完全二叉树。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
